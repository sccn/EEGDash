[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
dynamic = ["version"]
name = "eegdash"
authors = [
  { name = "Young Truong",    email = "dt.young112@gmail.com" },
  { name = "Arnaud Delorme",  email = "adelorme@gmail.com" },
  { name = "Bruno Aristimunha", email = "b.aristimunha@gmail.com"}
]
description     = "EEG data for machine learning"
readme          = "README.md"
license         = { file = "LICENSE" }
requires-python = ">3.10"

classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Development Status :: 3 - Alpha",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
  "braindecode>=1.0",
  "mne_bids>=0.16.0",
  "numba",
  "numpy",
  "pandas",
  "pybids",
  "pymongo",
  "python-dotenv",
  "s3fs",
  "scipy",
  "tqdm",
  "xarray",
]

[project.urls]
Homepage = "https://github.com/sccn/EEG-Dash-Data"
Issues   = "https://github.com/sccn/EEG-Dash-Data/issues"


[project.optional-dependencies]
tests = [
    'pytest',
    'pytest-cov',
    'codecov',
    'pytest_cases',
]
dev = [
  "pre-commit"
]

docs = [
  "sphinx",
  "sphinx_gallery",
  "sphinx_rtd_theme",
  "numpydoc"
]

all = [
  "pytest",
  "pytest-cov",
  "codecov",
  "pytest_cases",
  "pre-commit",
  "sphinx",
  "sphinx_gallery",
  "sphinx_rtd_theme",
  "numpydoc"
]
[tool.setuptools]
py-modules = []

[tool.setuptools.dynamic]
version = {attr = "eegdash.__version__"}

[tool.setuptools.packages.find]
where      = ["."]
include    = ["eegdash*"]
exclude    = []
namespaces = false

[tool.ruff]
lint.ignore-init-module-imports = true
line-length = 88
target-version = "py311"

[tool.isort]
skip               = [".gitignore"]
skip_glob          = ["examples/*"]
py_version         = 312
profile            = "black"
sections           = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party  = ["eegdash", "braindecode"]
lines_between_sections = 1

[pytest]
testpaths        = ["tests"]
python_files     = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
