name: docs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - '*' # all branches, including forks

permissions:
  contents: write

jobs:
  docs:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Configure dataset cache paths
        id: cache-paths
        shell: python
        run: |
          import os
          from pathlib import Path

          home = Path.home()
          workspace = Path(os.environ["GITHUB_WORKSPACE"]).resolve()
          candidates = {
              "primary": home / "eegdash_cache",
              "home_dot": home / ".eegdash_cache",
              "workspace": workspace / ".eegdash_cache",
              "mne_data": home / "mne_data",
          }

          for path in candidates.values():
              path.mkdir(parents=True, exist_ok=True)

          with open(os.environ["GITHUB_ENV"], "a", encoding="utf-8") as env_file:
              env_file.write(f"EEGDASH_CACHE_DIR={candidates['primary']}\n")
              env_file.write(f"MNE_DATA={candidates['primary']}\n")

          with open(os.environ["GITHUB_OUTPUT"], "a", encoding="utf-8") as output:
              for key, path in candidates.items():
                  output.write(f"{key}={path}\n")

      - name: Install dependencies
        run: |
          python -m pip install uv
          uv venv
          uv pip install -e .[all]

      - name: Activate virtualenv
        run: |
          . .venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Create/Restore Data Caches (workspace)
        id: cache-data
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.cache-paths.outputs.primary }}
            ${{ steps.cache-paths.outputs.home_dot }}
            ${{ steps.cache-paths.outputs.workspace }}
            ${{ steps.cache-paths.outputs.mne_data }}
          # Cache includes dataset manifest hash so new datasets invalidate once automatically.
          key: ${{ runner.os }}-data-${{ hashFiles('consolidated/datasets_consolidated.json') }}-v1
          restore-keys: |
            ${{ runner.os }}-data-

      - name: Create Docs
        run: |
          cd docs
          uv run make html

      # New step to deploy the docs to the gh-pages branch
      - name: Deploy to GitHub Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build/html
          cname: eegdash.org
